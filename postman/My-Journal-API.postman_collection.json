{
  "info": {
    "name": "My Journal API",
    "description": "Complete API collection for My Journal - Scientific Journal Management System\n\nDemo Accounts:\n- Admin: admin@demo.com / Demo@123\n- Editor: editor@demo.com / Demo@123\n- Reviewer: reviewer@demo.com / Demo@123\n- Researcher: researcher@demo.com / Demo@123",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{token}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "üîê Authentication",
      "item": [
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set(\"token\", response.access_token);",
                  "    pm.environment.set(\"user_id\", response.user.id);",
                  "    console.log(\"‚úÖ Token saved:\", response.access_token.substring(0, 20) + \"...\");",
                  "    console.log(\"‚úÖ User ID saved:\", response.user.id);",
                  "    console.log(\"üë§ User:\", response.user.name, \"-\", response.user.role);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@demo.com\",\n  \"password\": \"Demo@123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "login"
              ]
            },
            "description": "üîë Login with email and password. Returns JWT token and user info.\n\n**Demo Accounts:**\n- admin@demo.com / Demo@123\n- editor@demo.com / Demo@123\n- reviewer@demo.com / Demo@123\n- researcher@demo.com / Demo@123"
          }
        }
      ]
    },
    {
      "name": "üë• Users",
      "item": [
        {
          "name": "Register User (Public)",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"newuser@example.com\",\n  \"password\": \"Password@123\",\n  \"name\": \"New User\",\n  \"role\": \"researcher\",\n  \"phone\": \"0123456789\",\n  \"affiliation\": \"University Name\",\n  \"specialization\": \"Computer Science\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "users"
              ]
            },
            "description": "üìù Public endpoint to register a new user"
          }
        },
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/users",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "users"
              ]
            },
            "description": "üìã Get all users (Admin/Editor only)"
          }
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "users",
                "{{user_id}}"
              ]
            },
            "description": "üë§ Get user by ID"
          }
        },
        {
          "name": "Update User",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Name\",\n  \"status\": \"active\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "users",
                "{{user_id}}"
              ]
            },
            "description": "‚úèÔ∏è Update user (Admin/Editor only)"
          }
        }
      ]
    },
    {
      "name": "üìö Research",
      "item": [
        {
          "name": "Create Research",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set(\"research_id\", response.id);",
                  "    console.log(\"‚úÖ Research ID saved:\", response.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user_id\": \"{{user_id}}\",\n  \"title\": \"Test Research Title\",\n  \"abstract\": \"This is a test research abstract...\",\n  \"keywords\": \"AI, Machine Learning, Deep Learning\",\n  \"specialization\": \"Computer Science\",\n  \"authors\": \"Dr. John Doe, Dr. Jane Smith\",\n  \"status\": \"under-review\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/research",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "research"
              ]
            },
            "description": "üìù Create new research (Researcher/Admin/Editor)"
          }
        },
        {
          "name": "Get All Research",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/research?status=under-review",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "research"
              ],
              "query": [
                {
                  "key": "user_id",
                  "value": "{{user_id}}",
                  "disabled": true
                },
                {
                  "key": "status",
                  "value": "under-review"
                },
                {
                  "key": "specialization",
                  "value": "Computer Science",
                  "disabled": true
                }
              ]
            },
            "description": "üìã Get all research with optional filters"
          }
        },
        {
          "name": "Get Research by ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/research/{{research_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "research",
                "{{research_id}}"
              ]
            },
            "description": "üìÑ Get research by ID"
          }
        },
        {
          "name": "Upload Research PDF",
          "request": {
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/research/{{research_id}}/upload-pdf",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "research",
                "{{research_id}}",
                "upload-pdf"
              ]
            },
            "description": "üì§ Upload research PDF file to Cloudinary"
          }
        },
        {
          "name": "Get PDF View URL",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/research/{{research_id}}/pdf-view-url",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "research",
                "{{research_id}}",
                "pdf-view-url"
              ]
            },
            "description": "üîó Get signed URL to view PDF (valid for 1 hour)"
          }
        },
        {
          "name": "Update Research Status",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"approved\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/research/{{research_id}}/status",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "research",
                "{{research_id}}",
                "status"
              ]
            },
            "description": "‚úÖ Update research status (Admin/Editor only)"
          }
        }
      ]
    },
    {
      "name": "‚≠ê Reviews",
      "item": [
        {
          "name": "Create Review",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set(\"review_id\", response.id);",
                  "    console.log(\"‚úÖ Review ID saved:\", response.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"research_id\": \"{{research_id}}\",\n  \"reviewer_id\": \"{{user_id}}\",\n  \"comments\": \"This is a comprehensive review...\",\n  \"rating\": 4,\n  \"recommendation\": \"accept\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/reviews",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "reviews"
              ]
            },
            "description": "üìù Create new review (Reviewer only)"
          }
        },
        {
          "name": "Get Research Reviews",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/reviews?research_id={{research_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "reviews"
              ],
              "query": [
                {
                  "key": "research_id",
                  "value": "{{research_id}}"
                }
              ]
            },
            "description": "üìã Get all reviews for a research"
          }
        }
      ]
    },
    {
      "name": "üîî Notifications",
      "item": [
        {
          "name": "Get User Notifications",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/notifications/user/{{user_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "notifications",
                "user",
                "{{user_id}}"
              ]
            },
            "description": "üì¨ Get all notifications for current user"
          }
        },
        {
          "name": "Get Unread Count",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/notifications/user/{{user_id}}/unread-count",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "notifications",
                "user",
                "{{user_id}}",
                "unread-count"
              ]
            },
            "description": "üî¢ Get unread notifications count"
          }
        },
        {
          "name": "Mark as Read",
          "request": {
            "method": "PATCH",
            "url": {
              "raw": "{{base_url}}/notifications/{{notification_id}}/read",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "notifications",
                "{{notification_id}}",
                "read"
              ]
            },
            "description": "‚úÖ Mark notification as read"
          }
        },
        {
          "name": "Mark All as Read",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user_id\": \"{{user_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/notifications/mark-all-read",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "notifications",
                "mark-all-read"
              ]
            },
            "description": "‚úÖ Mark all notifications as read"
          }
        }
      ]
    },
    {
      "name": "‚öôÔ∏è Site Settings",
      "item": [
        {
          "name": "Get Public Settings",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/site-settings/public",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "site-settings",
                "public"
              ]
            },
            "description": "üåê Get public site settings (no auth required)"
          }
        },
        {
          "name": "Get All Settings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/site-settings",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "site-settings"
              ]
            },
            "description": "‚öôÔ∏è Get all site settings (Admin/Editor only)"
          }
        },
        {
          "name": "Update Settings",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"site_name\": \"My Journal\",\n  \"contact_email\": \"contact@myjournal.com\",\n  \"maintenance_mode\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/site-settings",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "site-settings"
              ]
            },
            "description": "‚úèÔ∏è Update site settings (Admin only)"
          }
        }
      ]
    }
  ]
}